consumes:
- application/json
definitions:
  datum.os.resourcemanager.v1alpha.AuthProvider:
    default: AUTH_PROVIDER_UNSPECIFIED
    description: "AuthProvider is the auth provider used to register the account.\n\
      \n - AUTH_PROVIDER_UNSPECIFIED: The auth provider is not specified.\n - AUTH_PROVIDER_CREDENTIALS:\
      \ The auth provider is credentials (email and password).\n - AUTH_PROVIDER_GOOGLE:\
      \ The auth provider is Google.\n - AUTH_PROVIDER_GITHUB: The auth provider is\
      \ GitHub.\n - AUTH_PROVIDER_WEBAUTHN: The auth provider is WebAuthn."
    enum:
    - AUTH_PROVIDER_UNSPECIFIED
    - AUTH_PROVIDER_CREDENTIALS
    - AUTH_PROVIDER_GOOGLE
    - AUTH_PROVIDER_GITHUB
    - AUTH_PROVIDER_WEBAUTHN
    type: string
  datum.os.resourcemanager.v1alpha.ListOrganizationsResponse:
    description: ListOrganizationsResponse is the response for listing Organizations.
    properties:
      nextPageToken:
        description: 'A token to retrieve the next page of results.

          Pass this value in the ListOrganizationsRequest.page_token field in a

          subsequent call to `ListOrganizations` to retrieve the next page of

          results. If the page token is not set, there are no more results.'
        type: string
      organizations:
        description: The list of Organizations.
        items:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization'
          type: object
        type: array
    type: object
  datum.os.resourcemanager.v1alpha.ListProjectsResponse:
    description: The response message for listing projects.
    properties:
      nextPageToken:
        description: A token to retrieve the next page of results.
        type: string
      projects:
        description: The list of projects.
        items:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Project'
          type: object
        type: array
    type: object
  datum.os.resourcemanager.v1alpha.ListUsersResponse:
    description: ListUsersResponse is the response for listing Users.
    properties:
      nextPageToken:
        description: 'A token to retrieve the next page of results.

          Pass this value in the ListUsersRequest.page_token field in a subsequent

          call to `ListUsers` to retrieve the next page of results. If the page token

          is not set, there are no more results.'
        type: string
      users:
        description: The list of Users.
        items:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.User'
          type: object
        type: array
    type: object
  datum.os.resourcemanager.v1alpha.Organization:
    description: Organization is a resource representing an Organization.
    properties:
      annotations:
        additionalProperties:
          type: string
        description: 'Annotations is an unstructured key-value map stored with a Organization

          that may be set by external tools to store and retrieve arbitrary metadata.

          They are not queryable and should be preserved when modifying objects.'
        type: object
      createTime:
        description: Output only. The time when the Organization is created.
        format: date-time
        readOnly: true
        type: string
      deleteTime:
        description: 'Output only. For a deleted resource, the deletion time. It is
          only

          populated as a response to a Delete request.'
        format: date-time
        readOnly: true
        type: string
      displayName:
        description: 'Human-readable display name of this Organization that you can
          modify.

          The maximum length is 63 characters.'
        type: string
      etag:
        description: 'This checksum is computed by the server based on the value of

          other fields, and might be sent on update requests to ensure the client
          has

          an up-to-date value before proceeding.'
        readOnly: true
        type: string
      labels:
        additionalProperties:
          type: string
        description: 'Labels is an unstructured key-value map stored with a Organization
          that

          may be set by external tools to enable platform features which identify

          Organizations via label selections.'
        type: object
      name:
        description: The resource name of this Organization.
        readOnly: true
        type: string
      organizationId:
        description: The resource ID of this Organization within its parent resource.
        readOnly: true
        type: string
      reconciling:
        description: 'Output only. If set, there are currently changes in flight to
          the

          Organization.'
        readOnly: true
        type: boolean
      spec:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.Spec'
        description: The specifications of the Organization.
      status:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.Status'
        description: The status of the Organization.
        readOnly: true
      uid:
        description: 'Server assigned unique identifier for the Organization. The
          value

          is a UUID4 string and guaranteed to remain unchanged until the resource
          is

          deleted.'
        readOnly: true
        type: string
      updateTime:
        description: Output only. The last time that the Organization is updated.
        format: date-time
        readOnly: true
        type: string
    required:
    - spec
    type: object
  datum.os.resourcemanager.v1alpha.Organization.OrgUser:
    description: 'OrgUser is a user of an organization. It is a subset of the User
      resource

      meant for convenience only.'
    properties:
      email:
        description: The email of the user.
        readOnly: true
        type: string
      firstname:
        description: The first name of the user.
        readOnly: true
        type: string
      lastname:
        description: The last name of the user.
        readOnly: true
        type: string
      uid:
        description: The uid of the user.
        readOnly: true
        type: string
    type: object
  datum.os.resourcemanager.v1alpha.Organization.Spec:
    description: Spec is the specification of an Organization.
    properties:
      avatarDataUri:
        description: The data URI of the organization's avatar.
        type: string
      avatarRemoteUri:
        description: The URL of the organization's avatar.
        type: string
      description:
        description: A description of the organization.
        type: string
      members:
        description: The members of the organization.
        items:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.OrgUser'
          type: object
        readOnly: true
        type: array
      owners:
        description: The owners of the organization.
        items:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.OrgUser'
          type: object
        readOnly: true
        type: array
      parentOrganizationId:
        description: The ID of the parent organization for the organization.
        type: string
    type: object
  datum.os.resourcemanager.v1alpha.Organization.Status:
    description: Status is the status of an Organization.
    properties:
      internal:
        description: For internal use only.
        readOnly: true
        type: boolean
      personal:
        description: For internal user only.
        readOnly: true
        type: boolean
      verificationState:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.VerificationState'
        description: The verification state of the organization.
        readOnly: true
    type: object
  datum.os.resourcemanager.v1alpha.Project:
    description: The Project resource message.
    properties:
      annotations:
        additionalProperties:
          type: string
        description: "Annotations are an unstructured key-value map stored with a\
          \ project that\nmay be set by external tools to store and retrieve arbitrary\
          \ metadata.\nThey are not queryable and will be preserved when modifying\
          \ objects.\n\nAnnotation keys must be in a fully-qualified domain format.\n\
          \n  annotations:\n    resourcemanager.datumapis.com/project-id: some-value\n\
          \    extensions.calico.com/network: some-network"
        type: object
      createTime:
        description: The time when the project was created.
        format: date-time
        readOnly: true
        type: string
      deleteTime:
        description: The time when the project was deleted.
        format: date-time
        readOnly: true
        type: string
      description:
        description: An optional description for the project.
        type: string
      displayName:
        description: 'A user-provided name for the project. This must be unique within
          the parent

          resource.'
        type: string
      etag:
        description: 'A checksum calculated by the server based on the current state
          of the

          project resource. This value can be sent on update and delete requests to

          ensure the client has an up-to-date value before proceeding with the mutate

          call.'
        readOnly: true
        type: string
      labels:
        additionalProperties:
          type: string
        description: 'Labels are an unstructured key-value map that can be used to
          categorizing

          the resource. Eventually the system will allow filtering on project labels.'
        type: object
      name:
        title: 'The resource name of the Project.

          Format: projects/{project}'
        type: string
      parent:
        description: 'The resource name of the Project''s parent in the resource hierarchy.
          This

          value will change if the project is moved in the resource hierachy. The

          parent will always be a folder (e.g. `folders/{folder}`) or organization

          (e.g. `organizations/{organization}`).


          The [MoveProject] method can be used to move the Project to a new parent.'
        readOnly: true
        type: string
      reconciling:
        description: 'Inidicates whether the project is being reconciled because the
          current

          state of the project does not match the desired state.'
        readOnly: true
        type: boolean
      uid:
        description: A system-generated UUIDv4 that uniquely identifies the resource.
        readOnly: true
        type: string
      updateTime:
        description: The time when the project was last updated.
        format: date-time
        readOnly: true
        type: string
    required:
    - displayName
    type: object
  datum.os.resourcemanager.v1alpha.Projects.MoveProjectBody:
    description: 'The request message to use when moving a project to a new location
      within

      the resource hierarchy.'
    properties:
      destinationParent:
        description: 'The location within the hierarchy to move the project to. The
          project

          can be moved to another folder within the organization or the root of

          the organization. Must be the resource name of the parent, e.g.

          `folders/{folder}` or `organizations/{organization}`.'
        type: string
      etag:
        description: 'Optionally provide the computed checksum value of the current
          resource to

          ensure a project will only be moved when the current resource was provided

          in the request.'
        type: string
      validateOnly:
        description: 'When set to true, the request will only be validated and no
          actions will be

          taken on the project. This is helpful for confirming the request options

          are correct before calling the endpoint.'
        type: boolean
    required:
    - destinationParent
    type: object
  datum.os.resourcemanager.v1alpha.Role:
    default: ROLE_UNSPECIFIED
    description: "Role is the role of a user.\n\n - ROLE_UNSPECIFIED: The role is\
      \ not specified.\n - ROLE_OWNER: The role is owner.\n - ROLE_ADMIN: The role\
      \ is admin.\n - ROLE_MEMBER: The role is member.\n - ROLE_USER: The role is\
      \ user."
    enum:
    - ROLE_UNSPECIFIED
    - ROLE_OWNER
    - ROLE_ADMIN
    - ROLE_MEMBER
    - ROLE_USER
    type: string
  datum.os.resourcemanager.v1alpha.UITheme:
    default: UI_THEME_UNSPECIFIED
    description: "UITheme is the theme of the user interface.\n\n - UI_THEME_UNSPECIFIED:\
      \ The theme is not specified.\n - UI_THEME_AUTO: The theme is auto.\n - UI_THEME_LIGHT:\
      \ The theme is light.\n - UI_THEME_DARK: The theme is dark."
    enum:
    - UI_THEME_UNSPECIFIED
    - UI_THEME_AUTO
    - UI_THEME_LIGHT
    - UI_THEME_DARK
    type: string
  datum.os.resourcemanager.v1alpha.User:
    description: User is a resource representing a User.
    properties:
      annotations:
        additionalProperties:
          type: string
        description: 'Annotations is an unstructured key-value map stored with a User
          that

          may be set by external tools to store and retrieve arbitrary metadata.

          They are not queryable and should be preserved when modifying objects.'
        type: object
      createTime:
        description: Output only. The time when the User is created.
        format: date-time
        readOnly: true
        type: string
      deleteTime:
        description: 'Output only. For a deleted resource, the deletion time. It is
          only

          populated as a response to a Delete request.'
        format: date-time
        readOnly: true
        type: string
      displayName:
        description: 'Human-readable display name of this User that you can modify.

          The maximum length is 63 characters.'
        type: string
      etag:
        description: 'This checksum is computed by the server based on the value of

          other fields, and might be sent on update requests to ensure the client
          has

          an up-to-date value before proceeding.'
        readOnly: true
        type: string
      labels:
        additionalProperties:
          type: string
        description: 'Labels is an unstructured key-value map stored with a User that

          may be set by external tools to enable platform features which identify

          Users via label selections.'
        type: object
      name:
        description: The resource name of this User.
        readOnly: true
        type: string
      reconciling:
        description: Output only. If set, there are currently changes in flight to
          the User.
        readOnly: true
        type: boolean
      spec:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserSpec'
        description: The specification of the user.
      status:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserStatus'
        description: The status of the user.
        readOnly: true
      uid:
        description: 'Server assigned unique identifier for the User. The value

          is a UUID4 string and guaranteed to remain unchanged until the resource
          is

          deleted.'
        readOnly: true
        type: string
      updateTime:
        description: Output only. The last time that the User is updated.
        format: date-time
        readOnly: true
        type: string
      userId:
        description: The resource ID of this User within its parent resource.
        readOnly: true
        type: string
    required:
    - spec
    type: object
  datum.os.resourcemanager.v1alpha.UserSetting:
    description: UserSetting is the setting of a User.
    properties:
      uiTheme:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UITheme'
        description: The theme of the user interface.
    type: object
  datum.os.resourcemanager.v1alpha.UserSpec:
    description: UserSpec is the specification of a User.
    properties:
      authProvider:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.AuthProvider'
        description: The auth provider used to register the account.
      avatarDataUri:
        description: The avatar of the user, as a data URI.
        type: string
      avatarRemoteUri:
        description: The avatar of the user, as a remote URI.
        type: string
      avatarUpdateTime:
        description: The time the user's avatar was last updated.
        format: date-time
        type: string
      email:
        description: The email of the user.
        type: string
      firstname:
        description: The first name of the user.
        type: string
      lastSeenTime:
        description: The time the user was last seen.
        format: date-time
        type: string
      lastname:
        description: The last name of the user.
        type: string
      phoneNumbers:
        description: The phone numbers of the user.
        items:
          $ref: '#/definitions/google.type.PhoneNumber'
          type: object
        type: array
      role:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Role'
        description: The role of the user.
      secondaryEmail:
        description: 'The secondary email of the user. Can be used for notifications,
          account

          recovery, etc.'
        type: string
      setting:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserSetting'
        description: The setting of the user.
    required:
    - email
    type: object
  datum.os.resourcemanager.v1alpha.UserState:
    default: USER_STATE_UNSPECIFIED
    description: "UserState is the state of a user.\n\n - USER_STATE_UNSPECIFIED:\
      \ The state is not specified.\n - USER_STATE_ACTIVE: The state is active.\n\
      \ - USER_STATE_INACTIVE: The state is inactive.\n - USER_STATE_DEACTIVATED:\
      \ The state is deactivated.\n - USER_STATE_SUSPENDED: The state is suspended.\n\
      \ - USER_STATE_ONBOARDING: The state is onboarding."
    enum:
    - USER_STATE_UNSPECIFIED
    - USER_STATE_ACTIVE
    - USER_STATE_INACTIVE
    - USER_STATE_DEACTIVATED
    - USER_STATE_SUSPENDED
    - USER_STATE_ONBOARDING
    type: string
  datum.os.resourcemanager.v1alpha.UserStatus:
    description: UserStatus is the status of a User.
    properties:
      internal:
        description: For internal use only.
        readOnly: true
        type: boolean
      locked:
        description: Indicates if the user account is locked.
        readOnly: true
        type: boolean
      status:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserState'
        description: The state of the user account.
        readOnly: true
      verificationState:
        $ref: '#/definitions/datum.os.resourcemanager.v1alpha.VerificationState'
        description: The verification state of the user.
        readOnly: true
    type: object
  datum.os.resourcemanager.v1alpha.VerificationState:
    default: VERIFICATION_STATE_UNSPECIFIED
    description: "VerificationState is the verification state of an Organization or\
      \ User.\n\n - VERIFICATION_STATE_UNSPECIFIED: The verification state is not\
      \ specified.\n - VERIFICATION_STATE_PENDING: The organization is pending verification.\n\
      \ - VERIFICATION_STATE_VERIFIED: The organization is verified."
    enum:
    - VERIFICATION_STATE_UNSPECIFIED
    - VERIFICATION_STATE_PENDING
    - VERIFICATION_STATE_VERIFIED
    type: string
  google.longrunning.Operation:
    description: 'This resource represents a long-running operation that is the result
      of a

      network API call.'
    properties:
      done:
        description: 'If the value is `false`, it means the operation is still in
          progress.

          If `true`, the operation is completed, and either `error` or `response`
          is

          available.'
        type: boolean
      error:
        $ref: '#/definitions/google.rpc.Status'
        description: The error result of the operation in case of failure or cancellation.
      metadata:
        $ref: '#/definitions/google.protobuf.Any'
        description: 'Service-specific metadata associated with the operation.  It
          typically

          contains progress information and common metadata such as create time.

          Some services might not provide such metadata.  Any method that returns
          a

          long-running operation should document the metadata type, if any.'
      name:
        description: 'The server-assigned name, which is only unique within the same
          service that

          originally returns it. If you use the default HTTP mapping, the

          `name` should be a resource name ending with `operations/{unique_id}`.'
        type: string
      response:
        $ref: '#/definitions/google.protobuf.Any'
        description: 'The normal response of the operation in case of success.  If
          the original

          method returns no data on success, such as `Delete`, the response is

          `google.protobuf.Empty`.  If the original method is standard

          `Get`/`Create`/`Update`, the response should be the resource.  For other

          methods, the response should have the type `XxxResponse`, where `Xxx`

          is the original method name.  For example, if the original method name

          is `TakeSnapshot()`, the inferred response type is

          `TakeSnapshotResponse`.'
    type: object
  google.protobuf.Any:
    additionalProperties: {}
    description: "`Any` contains an arbitrary serialized protocol buffer message along\
      \ with a\nURL that describes the type of the serialized message.\n\nProtobuf\
      \ library provides support to pack/unpack Any values in the form\nof utility\
      \ functions or additional generated methods of the Any type.\n\nExample 1: Pack\
      \ and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n\
      \    ...\n    if (any.UnpackTo(&foo)) {\n      ...\n    }\n\nExample 2: Pack\
      \ and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n\
      \    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n\
      \    }\n\nExample 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n\
      \    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n\
      \      any.Unpack(foo)\n      ...\n\nExample 4: Pack and unpack a message in\
      \ Go\n\n     foo := &pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err\
      \ != nil {\n       ...\n     }\n     ...\n     foo := &pb.Foo{}\n     if err\
      \ := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods\
      \ provided by protobuf library will by default use\n'type.googleapis.com/full.type.name'\
      \ as the type URL and the unpack\nmethods only use the fully qualified type\
      \ name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\"\
      \ will yield type\nname \"y.z\".\n\n\nJSON\n\nThe JSON representation of an\
      \ `Any` value uses the regular\nrepresentation of the deserialized, embedded\
      \ message, with an\nadditional field `@type` which contains the type URL. Example:\n\
      \n    package google.profile;\n    message Person {\n      string first_name\
      \ = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\"\
      ,\n      \"firstName\": <string>,\n      \"lastName\": <string>\n    }\n\nIf\
      \ the embedded message type is well-known and has a custom JSON\nrepresentation,\
      \ that representation will be embedded adding a field\n`value` which holds the\
      \ custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\
      \n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n\
      \      \"value\": \"1.212s\"\n    }"
    properties:
      '@type':
        description: "A URL/resource name that uniquely identifies the type of the\
          \ serialized\nprotocol buffer message. This string must contain at least\n\
          one \"/\" character. The last segment of the URL's path must represent\n\
          the fully qualified name of the type (as in\n`path/google.protobuf.Duration`).\
          \ The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\
          \nIn practice, teams usually precompile into the binary all types that they\n\
          expect it to use in the context of Any. However, for URLs which use the\n\
          scheme `http`, `https`, or no scheme, one can optionally set up a type\n\
          server that maps type URLs to message definitions as follows:\n\n* If no\
          \ scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must\
          \ yield a [google.protobuf.Type][]\n  value in binary format, or produce\
          \ an error.\n* Applications are allowed to cache lookup results based on\
          \ the\n  URL, or have them precompiled into a binary to avoid any\n  lookup.\
          \ Therefore, binary compatibility needs to be preserved\n  on changes to\
          \ types. (Use versioned type names to manage\n  breaking changes.)\n\nNote:\
          \ this functionality is not currently available in the official\nprotobuf\
          \ release, and it is not used for type URLs beginning with\ntype.googleapis.com.\n\
          \nSchemes other than `http`, `https` (or the empty scheme) might be\nused\
          \ with implementation specific semantics."
        type: string
    type: object
  google.rpc.Status:
    description: 'The `Status` type defines a logical error model that is suitable
      for

      different programming environments, including REST APIs and RPC APIs. It is

      used by [gRPC](https://github.com/grpc). Each `Status` message contains

      three pieces of data: error code, error message, and error details.


      You can find out more about this error model and how to work with it in the

      [API Design Guide](https://cloud.google.com/apis/design/errors).'
    properties:
      code:
        description: 'The status code, which should be an enum value of

          [google.rpc.Code][google.rpc.Code].'
        format: int32
        type: integer
      details:
        description: 'A list of messages that carry the error details.  There is a
          common set of

          message types for APIs to use.'
        items:
          $ref: '#/definitions/google.protobuf.Any'
          type: object
        type: array
      message:
        description: 'A developer-facing error message, which should be in English.
          Any

          user-facing error message should be localized and sent in the

          [google.rpc.Status.details][google.rpc.Status.details] field, or localized

          by the client.'
        type: string
    type: object
  google.type.PhoneNumber:
    description: "An object representing a phone number, suitable as an API wire format.\n\
      \nThis representation:\n\n - should not be used for locale-specific formatting\
      \ of a phone number, such\n   as \"+1 (650) 253-0000 ext. 123\"\n\n - is not\
      \ designed for efficient storage\n - may not be suitable for dialing - specialized\
      \ libraries (see references)\n   should be used to parse the number for that\
      \ purpose\n\nTo do something meaningful with this number, such as format it\
      \ for various\nuse-cases, convert it to an `i18n.phonenumbers.PhoneNumber` object\
      \ first.\n\nFor instance, in Java this would be:\n\n   com.google.type.PhoneNumber\
      \ wireProto =\n       com.google.type.PhoneNumber.newBuilder().build();\n  \
      \ com.google.i18n.phonenumbers.Phonenumber.PhoneNumber phoneNumber =\n     \
      \  PhoneNumberUtil.getInstance().parse(wireProto.getE164Number(), \"ZZ\");\n\
      \   if (!wireProto.getExtension().isEmpty()) {\n     phoneNumber.setExtension(wireProto.getExtension());\n\
      \   }\n\n Reference(s):\n  - https://github.com/google/libphonenumber"
    properties:
      e164Number:
        description: "The phone number, represented as a leading plus sign ('+'),\
          \ followed by a\nphone number that uses a relaxed ITU E.164 format consisting\
          \ of the\ncountry calling code (1 to 3 digits) and the subscriber number,\
          \ with no\nadditional spaces or formatting, e.g.:\n - correct: \"+15552220123\"\
          \n - incorrect: \"+1 (555) 222-01234 x123\".\n\nThe ITU E.164 format limits\
          \ the latter to 12 digits, but in practice not\nall countries respect that,\
          \ so we relax that restriction here.\nNational-only numbers are not allowed.\n\
          \nReferences:\n - https://www.itu.int/rec/T-REC-E.164-201011-I\n - https://en.wikipedia.org/wiki/E.164.\n\
          \ - https://en.wikipedia.org/wiki/List_of_country_calling_codes"
        type: string
      extension:
        description: 'The phone number''s extension. The extension is not standardized
          in ITU

          recommendations, except for being defined as a series of numbers with a

          maximum length of 40 digits. Other than digits, some other dialing

          characters such as '','' (indicating a wait) or ''#'' may be stored here.


          Note that no regions currently use extensions with short codes, so this

          field is normally only set in conjunction with an E.164 number. It is held

          separately from the E.164 number to allow for short code extensions in the

          future.'
        type: string
      shortCode:
        $ref: '#/definitions/google.type.PhoneNumber.ShortCode'
        description: "A short code.\n\nReference(s):\n - https://en.wikipedia.org/wiki/Short_code"
    type: object
  google.type.PhoneNumber.ShortCode:
    description: 'An object representing a short code, which is a phone number that
      is

      typically much shorter than regular phone numbers and can be used to

      address messages in MMS and SMS systems, as well as for abbreviated dialing

      (e.g. "Text 611 to see how many minutes you have remaining on your plan.").


      Short codes are restricted to a region and are not internationally

      dialable, which means the same short code can exist in different regions,

      with different usage and pricing, even if those regions share the same

      country calling code (e.g. US and CA).'
    properties:
      number:
        description: 'Required. The short code digits, without a leading plus (''+'')
          or country

          calling code, e.g. "611".'
        type: string
      regionCode:
        description: "Required. The BCP-47 region code of the location where calls\
          \ to this\nshort code can be made, such as \"US\" and \"BB\".\n\nReference(s):\n\
          \ - http://www.unicode.org/reports/tr35/#unicode_region_subtag"
        type: string
    type: object
info:
  contact:
    email: support@datum.net
    name: API Support
    url: https://support.datum.net
  description: API for the Datum OS
  termsOfService: https://datum.net/terms
  title: Datum OS API
  version: 1.0.0
paths:
  /v1alpha/folders/{folder}/projects:
    get:
      description: 'Projects can be organized into Folders or set at the root of the

        Organizatino''s heirarchy.'
      operationId: Projects_ListProjects2
      parameters:
      - in: path
        name: folder
        required: true
        type: string
      - description: 'Optional. The maximum number of projects to return. If unspecified,

          defaults to 50.'
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Optional. A token identifying a page of results to return.
        in: query
        name: pageToken
        required: false
        type: string
      - description: Optional. A filter to apply to the results.
        in: query
        name: filter
        required: false
        type: string
      - description: Optional. When set to true, the response will include deleted
          projects.
        in: query
        name: showDeleted
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.ListProjectsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Lists projects under a parent resource.
      tags:
      - Projects
    post:
      operationId: Projects_CreateProject2
      parameters:
      - in: path
        name: folder
        required: true
        type: string
      - description: The project to create.
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Project'
          required:
          - project
      - description: 'Set the ID to use for the project. This will be used as the
          last section of

          the project''s resource name.'
        in: query
        name: projectId
        required: false
        type: string
      - description: 'When set to true, the request will be validated but the project
          will not be

          created within the system. This is helpful to perform server-side

          validation of resources and show validation errors to users prior to

          allowing them to submit the creation request.'
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Creates a project within the resource hierarchy.
      tags:
      - Projects
  /v1alpha/organizations:
    get:
      operationId: Organizations_ListOrganizations
      parameters:
      - description: 'The parent organization where the Organizations will be listed.

          If not specified, the current user''s organization will be used.'
        in: path
        name: parent
        required: true
        type: string
      - description: 'The maximum number of Organizations to return. The service may
          return fewer

          than this value. If unspecified, at most 50 Organizations will be returned.

          The maximum value is 1000; values above 1000 will be coerced to 1000.'
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - description: 'A page token, received from a previous `ListOrganizations` call.
          Provide

          this to retrieve the subsequent page. When paginating, all other parameters

          must match the call that provided the page token.'
        in: query
        name: pageToken
        required: false
        type: string
      - description: A filter expression that filters the Organizations to be listed.
        in: query
        name: filter
        required: false
        type: string
      - description: 'The order by fields for the Organizations. The default order
          is ascending.

          There is no descending order.'
        in: query
        name: orderBy
        required: false
        type: string
      - description: Show deleted Organizations.
        in: query
        name: showDeleted
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.ListOrganizationsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: ListOrganizations lists all Organizations.
      tags:
      - Organizations
    post:
      operationId: Organizations_CreateOrganization
      parameters:
      - description: 'The parent resource where the Organization will be created.
          Defaults to the

          current user''s organization. Format: organizations'
        in: path
        name: parent
        required: true
        type: string
      - description: The Organization to create.
        in: body
        name: organization
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization'
          required:
          - organization
      - description: 'The ID to use for the Organization. If not specified, an ID
          will be

          automatically generated. If the ID is automatically generated, the Client

          is responsible for reconciliation.'
        in: query
        name: organizationId
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: CreateOrganization creates a new Organization.
      tags:
      - Organizations
  /v1alpha/organizations/{organization}:
    delete:
      operationId: Organizations_DeleteOrganization
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: 'The etag of the Organization to delete. If this is not the same
          etag as the

          currently stored Organization, the request will be rejected. If not

          provided, the Organization will be deleted unconditionally.'
        in: query
        name: etag
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      - description: 'If true, an organization that is missing or previously deleted
          will be

          deleted successfully.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: DeleteOrganization deletes an Organization by name.
      tags:
      - Organizations
    get:
      operationId: Organizations_GetOrganization
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: GetOrganization gets an Organization by name.
      tags:
      - Organizations
    patch:
      operationId: Organizations_UpdateOrganization
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: The Organization to update.
        in: body
        name: organization
        required: true
        schema:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key-value map stored with
                a Organization

                that may be set by external tools to store and retrieve arbitrary
                metadata.

                They are not queryable and should be preserved when modifying objects.'
              type: object
            createTime:
              description: Output only. The time when the Organization is created.
              format: date-time
              readOnly: true
              type: string
            deleteTime:
              description: 'Output only. For a deleted resource, the deletion time.
                It is only

                populated as a response to a Delete request.'
              format: date-time
              readOnly: true
              type: string
            displayName:
              description: 'Human-readable display name of this Organization that
                you can modify.

                The maximum length is 63 characters.'
              type: string
            etag:
              description: 'This checksum is computed by the server based on the value
                of

                other fields, and might be sent on update requests to ensure the client
                has

                an up-to-date value before proceeding.'
              readOnly: true
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Labels is an unstructured key-value map stored with a
                Organization that

                may be set by external tools to enable platform features which identify

                Organizations via label selections.'
              type: object
            organizationId:
              description: The resource ID of this Organization within its parent
                resource.
              readOnly: true
              type: string
            reconciling:
              description: 'Output only. If set, there are currently changes in flight
                to the

                Organization.'
              readOnly: true
              type: boolean
            spec:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.Spec'
              description: The specifications of the Organization.
            status:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Organization.Status'
              description: The status of the Organization.
              readOnly: true
            uid:
              description: 'Server assigned unique identifier for the Organization.
                The value

                is a UUID4 string and guaranteed to remain unchanged until the resource
                is

                deleted.'
              readOnly: true
              type: string
            updateTime:
              description: Output only. The last time that the Organization is updated.
              format: date-time
              readOnly: true
              type: string
          required:
          - spec
          - organization
          title: The Organization to update.
          type: object
      - description: 'Allow missing Organization. If true, the Organization will be
          created if it

          does not exist. In this case, field_mask is ignored.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: UpdateOrganization updates an Organization.
      tags:
      - Organizations
  /v1alpha/organizations/{organization}/projects:
    get:
      description: 'Projects can be organized into Folders or set at the root of the

        Organizatino''s heirarchy.'
      operationId: Projects_ListProjects
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: 'Optional. The maximum number of projects to return. If unspecified,

          defaults to 50.'
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - description: Optional. A token identifying a page of results to return.
        in: query
        name: pageToken
        required: false
        type: string
      - description: Optional. A filter to apply to the results.
        in: query
        name: filter
        required: false
        type: string
      - description: Optional. When set to true, the response will include deleted
          projects.
        in: query
        name: showDeleted
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.ListProjectsResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Lists projects under a parent resource.
      tags:
      - Projects
    post:
      operationId: Projects_CreateProject
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: The project to create.
        in: body
        name: project
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Project'
          required:
          - project
      - description: 'Set the ID to use for the project. This will be used as the
          last section of

          the project''s resource name.'
        in: query
        name: projectId
        required: false
        type: string
      - description: 'When set to true, the request will be validated but the project
          will not be

          created within the system. This is helpful to perform server-side

          validation of resources and show validation errors to users prior to

          allowing them to submit the creation request.'
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Creates a project within the resource hierarchy.
      tags:
      - Projects
  /v1alpha/organizations/{organization}/users:
    get:
      operationId: Users_ListUsers2
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: 'The maximum number of Users to return. The service may return
          fewer than

          this value. If unspecified, at most 50 Users will be returned. The maximum

          value is 1000; values above 1000 will be coerced to 1000.'
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - description: 'A page token, received from a previous `ListUsers` call. Provide
          this to

          retrieve the subsequent page. When paginating, all other parameters must

          match the call that provided the page token.'
        in: query
        name: pageToken
        required: false
        type: string
      - description: A filter expression that filters the Users to be listed.
        in: query
        name: filter
        required: false
        type: string
      - description: 'The order by fields for the Users. The default order is ascending.
          There is

          no descending order.'
        in: query
        name: orderBy
        required: false
        type: string
      - description: If true, the deleted Users will be included in the response.
        in: query
        name: showDeleted
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.ListUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: ListUsers lists all Users.
      tags:
      - Users
    post:
      operationId: Users_CreateUser2
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - description: The User to create.
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.User'
          required:
          - user
      - description: 'The ID to use for the User. If not specified, an ID will be
          automatically

          generated. If the ID is automatically generated, the Client is responsible

          for reconciliation.'
        in: query
        name: userId
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: CreateUser creates a new User.
      tags:
      - Users
  /v1alpha/organizations/{organization}/users/{user}:
    delete:
      operationId: Users_DeleteUser2
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - in: path
        name: user
        required: true
        type: string
      - description: 'The etag of the User to delete. If this is not the same etag
          as the

          currently stored User, the request will be rejected. If not provided, the

          User will be deleted unconditionally.'
        in: query
        name: etag
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      - description: If true, the User will be deleted successfully even if it does
          not exist.
        in: query
        name: allowMissing
        required: false
        type: boolean
      - description: 'If true, the User will be deleted even if it has child resources
          still

          existing.'
        in: query
        name: force
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: DeleteUser deletes a User by name.
      tags:
      - Users
    get:
      operationId: Users_GetUser2
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - in: path
        name: user
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.User'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: GetUser gets a User by name.
      tags:
      - Users
    patch:
      operationId: Users_UpdateUser2
      parameters:
      - in: path
        name: organization
        required: true
        type: string
      - in: path
        name: user
        required: true
        type: string
      - description: The User to update.
        in: body
        name: user
        required: true
        schema:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key-value map stored with
                a User that

                may be set by external tools to store and retrieve arbitrary metadata.

                They are not queryable and should be preserved when modifying objects.'
              type: object
            createTime:
              description: Output only. The time when the User is created.
              format: date-time
              readOnly: true
              type: string
            deleteTime:
              description: 'Output only. For a deleted resource, the deletion time.
                It is only

                populated as a response to a Delete request.'
              format: date-time
              readOnly: true
              type: string
            displayName:
              description: 'Human-readable display name of this User that you can
                modify.

                The maximum length is 63 characters.'
              type: string
            etag:
              description: 'This checksum is computed by the server based on the value
                of

                other fields, and might be sent on update requests to ensure the client
                has

                an up-to-date value before proceeding.'
              readOnly: true
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Labels is an unstructured key-value map stored with a
                User that

                may be set by external tools to enable platform features which identify

                Users via label selections.'
              type: object
            reconciling:
              description: Output only. If set, there are currently changes in flight
                to the User.
              readOnly: true
              type: boolean
            spec:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserSpec'
              description: The specification of the user.
            status:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserStatus'
              description: The status of the user.
              readOnly: true
            uid:
              description: 'Server assigned unique identifier for the User. The value

                is a UUID4 string and guaranteed to remain unchanged until the resource
                is

                deleted.'
              readOnly: true
              type: string
            updateTime:
              description: Output only. The last time that the User is updated.
              format: date-time
              readOnly: true
              type: string
            userId:
              description: The resource ID of this User within its parent resource.
              readOnly: true
              type: string
          required:
          - spec
          - user
          title: The User to update.
          type: object
      - description: 'If true, the User will be created if it does not exist. In this
          case,

          field_mask is ignored.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: UpdateUser updates a User.
      tags:
      - Users
  /v1alpha/projects/{project}:
    delete:
      description: 'A project will not be deleted until all resources have been removed
        from

        the project. Deleting a project will not immediately stop the billing for

        any resources provisioned within the project. Billing for a resource

        provisioned within a project will only stop once the resource has been

        removed.


        Projects can be scheduled for deletion in the future but no guarantees are

        provided on when the deletion will start after the requested deletion time

        has passed.'
      operationId: Projects_DeleteProject
      parameters:
      - in: path
        name: project
        required: true
        type: string
      - description: 'Indicates the request to update the project should only be validated
          and

          changes must not actually take effect on the resource. API consumers can

          leverage this option to perform validation and present errors to users

          before submitting a real update request.'
        in: query
        name: validateOnly
        required: false
        type: boolean
      - description: 'Optionally provide the computed checksum value of the current
          resource to

          ensure updates only take effect when the latest resource was provided by

          the caller.'
        in: query
        name: etag
        required: false
        type: string
      - description: 'When set to true, the request will still succeed if the project
          does not

          exist.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Delete a project from the platform.
      tags:
      - Projects
    get:
      description: 'This will always return the expected state of the project. The
        project''s

        status will always reflect the last observed status of the project.'
      operationId: Projects_GetProject
      parameters:
      - in: path
        name: project
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Project'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Retrieves a project by its name.
      tags:
      - Projects
    patch:
      operationId: Projects_UpdateProject
      parameters:
      - in: path
        name: project
        required: true
        type: string
      - description: Required. The project to update.
        in: body
        name: project
        required: true
        schema:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: "Annotations are an unstructured key-value map stored with\
                \ a project that\nmay be set by external tools to store and retrieve\
                \ arbitrary metadata.\nThey are not queryable and will be preserved\
                \ when modifying objects.\n\nAnnotation keys must be in a fully-qualified\
                \ domain format.\n\n  annotations:\n    resourcemanager.datumapis.com/project-id:\
                \ some-value\n    extensions.calico.com/network: some-network"
              type: object
            createTime:
              description: The time when the project was created.
              format: date-time
              readOnly: true
              type: string
            deleteTime:
              description: The time when the project was deleted.
              format: date-time
              readOnly: true
              type: string
            description:
              description: An optional description for the project.
              type: string
            displayName:
              description: 'A user-provided name for the project. This must be unique
                within the parent

                resource.'
              type: string
            etag:
              description: 'A checksum calculated by the server based on the current
                state of the

                project resource. This value can be sent on update and delete requests
                to

                ensure the client has an up-to-date value before proceeding with the
                mutate

                call.'
              readOnly: true
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Labels are an unstructured key-value map that can be used
                to categorizing

                the resource. Eventually the system will allow filtering on project
                labels.'
              type: object
            parent:
              description: 'The resource name of the Project''s parent in the resource
                hierarchy. This

                value will change if the project is moved in the resource hierachy.
                The

                parent will always be a folder (e.g. `folders/{folder}`) or organization

                (e.g. `organizations/{organization}`).


                The [MoveProject] method can be used to move the Project to a new
                parent.'
              readOnly: true
              type: string
            reconciling:
              description: 'Inidicates whether the project is being reconciled because
                the current

                state of the project does not match the desired state.'
              readOnly: true
              type: boolean
            uid:
              description: A system-generated UUIDv4 that uniquely identifies the
                resource.
              readOnly: true
              type: string
            updateTime:
              description: The time when the project was last updated.
              format: date-time
              readOnly: true
              type: string
          required:
          - displayName
          - project
          title: Required. The project to update.
          type: object
      - description: 'Indicates the request to update the project should only be validated
          and

          changes must not actually take effect on the resource. API consumers can

          leverage this option to perform validation and present errors to users

          before submitting a real update request.'
        in: query
        name: validateOnly
        required: false
        type: boolean
      - description: 'Set to true to indicate that a new Project should be created
          if the

          provided project doesn''t already exist.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Updates an existing Project
      tags:
      - Projects
  /v1alpha/projects/{project}:move:
    post:
      description: 'Users can move projects new locations in the resource hierarchy
        based on

        their organizational needs. Changing the location in the hierarchy can have

        adverse affects on IAM policies inherited by the project. Users must be

        careful that IAM policies applied from the existing parent are also set on

        the new parent **before** moving the project, otherwise they risk access

        granted through a parent''s policies being removed.'
      operationId: Projects_MoveProject
      parameters:
      - in: path
        name: project
        required: true
        type: string
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.Projects.MoveProjectBody'
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: Move a project to a new location in the resource hierarchy.
      tags:
      - Projects
  /v1alpha/users:
    get:
      operationId: Users_ListUsers
      parameters:
      - description: The parent resource of the Users.
        in: path
        name: parent
        required: true
        type: string
      - description: 'The maximum number of Users to return. The service may return
          fewer than

          this value. If unspecified, at most 50 Users will be returned. The maximum

          value is 1000; values above 1000 will be coerced to 1000.'
        format: int32
        in: query
        name: pageSize
        required: false
        type: integer
      - description: 'A page token, received from a previous `ListUsers` call. Provide
          this to

          retrieve the subsequent page. When paginating, all other parameters must

          match the call that provided the page token.'
        in: query
        name: pageToken
        required: false
        type: string
      - description: A filter expression that filters the Users to be listed.
        in: query
        name: filter
        required: false
        type: string
      - description: 'The order by fields for the Users. The default order is ascending.
          There is

          no descending order.'
        in: query
        name: orderBy
        required: false
        type: string
      - description: If true, the deleted Users will be included in the response.
        in: query
        name: showDeleted
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.ListUsersResponse'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: ListUsers lists all Users.
      tags:
      - Users
    post:
      operationId: Users_CreateUser
      parameters:
      - description: The parent resource of the User.
        in: path
        name: parent
        required: true
        type: string
      - description: The User to create.
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/datum.os.resourcemanager.v1alpha.User'
          required:
          - user
      - description: 'The ID to use for the User. If not specified, an ID will be
          automatically

          generated. If the ID is automatically generated, the Client is responsible

          for reconciliation.'
        in: query
        name: userId
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: CreateUser creates a new User.
      tags:
      - Users
  /v1alpha/users/{user}:
    delete:
      operationId: Users_DeleteUser
      parameters:
      - in: path
        name: user
        required: true
        type: string
      - description: 'The etag of the User to delete. If this is not the same etag
          as the

          currently stored User, the request will be rejected. If not provided, the

          User will be deleted unconditionally.'
        in: query
        name: etag
        required: false
        type: string
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      - description: If true, the User will be deleted successfully even if it does
          not exist.
        in: query
        name: allowMissing
        required: false
        type: boolean
      - description: 'If true, the User will be deleted even if it has child resources
          still

          existing.'
        in: query
        name: force
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: DeleteUser deletes a User by name.
      tags:
      - Users
    get:
      operationId: Users_GetUser
      parameters:
      - in: path
        name: user
        required: true
        type: string
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/datum.os.resourcemanager.v1alpha.User'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: GetUser gets a User by name.
      tags:
      - Users
    patch:
      operationId: Users_UpdateUser
      parameters:
      - in: path
        name: user
        required: true
        type: string
      - description: The User to update.
        in: body
        name: user
        required: true
        schema:
          properties:
            annotations:
              additionalProperties:
                type: string
              description: 'Annotations is an unstructured key-value map stored with
                a User that

                may be set by external tools to store and retrieve arbitrary metadata.

                They are not queryable and should be preserved when modifying objects.'
              type: object
            createTime:
              description: Output only. The time when the User is created.
              format: date-time
              readOnly: true
              type: string
            deleteTime:
              description: 'Output only. For a deleted resource, the deletion time.
                It is only

                populated as a response to a Delete request.'
              format: date-time
              readOnly: true
              type: string
            displayName:
              description: 'Human-readable display name of this User that you can
                modify.

                The maximum length is 63 characters.'
              type: string
            etag:
              description: 'This checksum is computed by the server based on the value
                of

                other fields, and might be sent on update requests to ensure the client
                has

                an up-to-date value before proceeding.'
              readOnly: true
              type: string
            labels:
              additionalProperties:
                type: string
              description: 'Labels is an unstructured key-value map stored with a
                User that

                may be set by external tools to enable platform features which identify

                Users via label selections.'
              type: object
            reconciling:
              description: Output only. If set, there are currently changes in flight
                to the User.
              readOnly: true
              type: boolean
            spec:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserSpec'
              description: The specification of the user.
            status:
              $ref: '#/definitions/datum.os.resourcemanager.v1alpha.UserStatus'
              description: The status of the user.
              readOnly: true
            uid:
              description: 'Server assigned unique identifier for the User. The value

                is a UUID4 string and guaranteed to remain unchanged until the resource
                is

                deleted.'
              readOnly: true
              type: string
            updateTime:
              description: Output only. The last time that the User is updated.
              format: date-time
              readOnly: true
              type: string
            userId:
              description: The resource ID of this User within its parent resource.
              readOnly: true
              type: string
          required:
          - spec
          - user
          title: The User to update.
          type: object
      - description: 'If true, the User will be created if it does not exist. In this
          case,

          field_mask is ignored.'
        in: query
        name: allowMissing
        required: false
        type: boolean
      - description: If true, the request is validated and nothing is persisted.
        in: query
        name: validateOnly
        required: false
        type: boolean
      responses:
        '200':
          description: A successful response.
          schema:
            $ref: '#/definitions/google.longrunning.Operation'
        default:
          description: An unexpected error response.
          schema:
            $ref: '#/definitions/google.rpc.Status'
      summary: UpdateUser updates a User.
      tags:
      - Users
produces:
- application/json
schemes:
- https
swagger: '2.0'
tags:
- name: Organizations
- name: Projects
- name: Users
