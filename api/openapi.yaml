# Generated with protoc-gen-openapi
# https://github.com/google/gnostic/tree/master/cmd/protoc-gen-openapi

openapi: 3.0.3
info:
    title: ""
    version: 0.0.1
paths:
    /v1alpha/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/files/{file}/generatePreSigned:
        get:
            tags:
                - Files
            description: Generates a pre-signed URL for a file.
            operationId: Files_GeneratePreSignedURL
            parameters:
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: httpMethod
                  in: query
                  description: |-
                    The HTTP method which will be used with the pre-signed URL. We support PUT
                     and GET. If you wish to DELETE the file use the DeleteFile method.
                  schema:
                    enum:
                        - PRE_SIGNED_URL_METHOD_UNSPECIFIED
                        - PRE_SIGNED_URL_METHOD_GET
                        - PRE_SIGNED_URL_METHOD_PUT
                    type: string
                    format: enum
                - name: mimeType
                  in: query
                  description: |-
                    The mime type of the file. This is only used for PUT requests and will
                     be ignored for GET requests.
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.GeneratePreSignedURLResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/folders/{folder}/projects:
        get:
            tags:
                - Projects
            description: |-
                Lists projects under a parent resource.

                 Projects can be organized into Folders or set at the root of the
                 Organizatino's heirarchy.
            operationId: Projects_ListProjects
            parameters:
                - name: folder
                  in: path
                  description: The folder id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. The maximum number of projects to return. If unspecified, defaults to 50.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: Optional. A token identifying a page of results to return.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. A filter to apply to the results.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: Optional. When set to true, the response will include deleted projects.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListProjectsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Projects
            description: Creates a project within the resource hierarchy.
            operationId: Projects_CreateProject
            parameters:
                - name: folder
                  in: path
                  description: The folder id.
                  required: true
                  schema:
                    type: string
                - name: projectId
                  in: query
                  description: |-
                    Set the ID to use for the project. This will be used as the last section of
                     the project's resource name.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: |-
                    When set to true, the request will be validated but the project will not be
                     created within the system. This is helpful to perform server-side
                     validation of resources and show validation errors to users prior to
                     allowing them to submit the creation request.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Project'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/invoices:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the response will include deleted Invoices.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: GetInvoice gets an Invoice.
            operationId: Invoices_GetInvoice
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, a missing Invoice will be treated as a success.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations:
        get:
            tags:
                - Organizations
            description: ListOrganizations lists all Organizations.
            operationId: Organizations_ListOrganizations
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Organizations to return. The service may return fewer than this value.
                     If unspecified, at most 50 Organizations will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListOrganizations` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Organizations to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Organizations. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: Show deleted Organizations.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListOrganizationsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Organizations
            description: CreateOrganization creates a new Organization.
            operationId: Organizations_CreateOrganization
            parameters:
                - name: organizationId
                  in: query
                  description: |-
                    The ID to use for the Organization. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}:
        get:
            tags:
                - Organizations
            description: GetOrganization gets an Organization by name.
            operationId: Organizations_GetOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Organizations
            description: DeleteOrganization deletes an Organization by name.
            operationId: Organizations_DeleteOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Organization to delete. If this is not the same etag as the currently stored Organization,
                     the request will be rejected. If not provided, the Organization will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, an organization that is missing or previously deleted will be deleted successfully.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Organizations
            description: UpdateOrganization updates an Organization.
            operationId: Organizations_UpdateOrganization
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Organization.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Organization. If true, the Organization will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/invoices:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the response will include deleted Invoices.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: GetInvoice gets an Invoice.
            operationId: Invoices_GetInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, a missing Invoice will be treated as a success.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/projects:
        get:
            tags:
                - Projects
            description: |-
                Lists projects under a parent resource.

                 Projects can be organized into Folders or set at the root of the
                 Organizatino's heirarchy.
            operationId: Projects_ListProjects
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: Optional. The maximum number of projects to return. If unspecified, defaults to 50.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: Optional. A token identifying a page of results to return.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: Optional. A filter to apply to the results.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: Optional. When set to true, the response will include deleted projects.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListProjectsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Projects
            description: Creates a project within the resource hierarchy.
            operationId: Projects_CreateProject
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: projectId
                  in: query
                  description: |-
                    Set the ID to use for the project. This will be used as the last section of
                     the project's resource name.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: |-
                    When set to true, the request will be validated but the project will not be
                     created within the system. This is helpful to perform server-side
                     validation of resources and show validation errors to users prior to
                     allowing them to submit the creation request.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Project'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/users:
        get:
            tags:
                - Users
            description: ListUsers lists all Users.
            operationId: Users_ListUsers
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Users to return. The service may return fewer than this value.
                     If unspecified, at most 50 Users will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListUsers` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Users to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Users. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Users will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Users
            description: CreateUser creates a new User.
            operationId: Users_CreateUser
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: userId
                  in: query
                  description: |-
                    The ID to use for the User. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/users/{user}:
        get:
            tags:
                - Users
            description: GetUser gets a User by name.
            operationId: Users_GetUser
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Users
            description: DeleteUser deletes a User by name.
            operationId: Users_DeleteUser
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the User to delete. If this is not the same etag as the currently stored User,
                     the request will be rejected. If not provided, the User will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the User will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: If true, the User will be deleted even if it has child resources still existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Users
            description: UpdateUser updates a User.
            operationId: Users_UpdateUser
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the User.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the User will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/users/{user}/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/users/{user}/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/vendors:
        get:
            tags:
                - Vendors
            description: ListVendors lists all Vendors.
            operationId: Vendors_ListVendors
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Vendors to return. The service may return fewer than this value.
                     If unspecified, at most 50 Vendors will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListVendors` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Vendors to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Vendors. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Vendors will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.ListVendorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Vendors
            description: CreateVendor creates a new Vendor.
            operationId: Vendors_CreateVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendorId
                  in: query
                  description: |-
                    The ID to use for the Vendor. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/organizations/{organization}/vendors/{vendor}:
        get:
            tags:
                - Vendors
            description: GetVendor gets a Vendor by name.
            operationId: Vendors_GetVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Vendors
            description: DeleteVendor deletes a Vendor by name.
            operationId: Vendors_DeleteVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Vendor to delete. If this is not the same etag as the currently stored Vendor,
                     the request will be rejected. If not provided, the Vendor will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the Vendor will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: If true, the Vendor will be deleted even if it has child resources still existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Vendors
            description: UpdateVendor updates a Vendor.
            operationId: Vendors_UpdateVendor
            parameters:
                - name: organization
                  in: path
                  description: The organization id.
                  required: true
                  schema:
                    type: string
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Vendor.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Vendor. If true, the Vendor will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/projects/{project}:
        get:
            tags:
                - Projects
            description: |-
                Retrieves a project by its name.

                 This will always return the expected state of the project. The project's
                 status will always reflect the last observed status of the project.
            operationId: Projects_GetProject
            parameters:
                - name: project
                  in: path
                  description: The project id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Project'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Projects
            description: |-
                Delete a project from the platform.

                 A project will not be deleted until all resources have been removed from
                 the project. Deleting a project will not immediately stop the billing for
                 any resources provisioned within the project. Billing for a resource
                 provisioned within a project will only stop once the resource has been
                 removed.

                 Projects can be scheduled for deletion in the future but no guarantees are
                 provided on when the deletion will start after the requested deletion time
                 has passed.
            operationId: Projects_DeleteProject
            parameters:
                - name: project
                  in: path
                  description: The project id.
                  required: true
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: |-
                    Indicates the request to update the project should only be validated and
                     changes must not actually take effect on the resource. API consumers can
                     leverage this option to perform validation and present errors to users
                     before submitting a real update request.
                  schema:
                    type: boolean
                - name: etag
                  in: query
                  description: |-
                    Optionally provide the computed checksum value of the current resource to
                     ensure updates only take effect when the latest resource was provided by
                     the caller.
                  schema:
                    type: string
                - name: allowMissing
                  in: query
                  description: |-
                    When set to true, the request will still succeed if the project does not
                     exist.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Projects
            description: Updates an existing Project
            operationId: Projects_UpdateProject
            parameters:
                - name: project
                  in: path
                  description: The project id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: Required. The update mask applies to the resource.
                  schema:
                    type: string
                    format: field-mask
                - name: validateOnly
                  in: query
                  description: |-
                    Indicates the request to update the project should only be validated and
                     changes must not actually take effect on the resource. API consumers can
                     leverage this option to perform validation and present errors to users
                     before submitting a real update request.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: |-
                    Set to true to indicate that a new Project should be created if the
                     provided project doesn't already exist.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Project'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/projects/{project}:move:
        post:
            tags:
                - Projects
            description: |-
                Move a project to a new location in the resource hierarchy.

                 Users can move projects new locations in the resource hierarchy based on
                 their organizational needs. Changing the location in the hierarchy can have
                 adverse affects on IAM policies inherited by the project. Users must be
                 careful that IAM policies applied from the existing parent are also set on
                 the new parent **before** moving the project, otherwise they risk access
                 granted through a parent's policies being removed.

                 (-- Imperative only API to move a project to different locations in the
                 resource hierarchy. --)
            operationId: Projects_MoveProject
            parameters:
                - name: project
                  in: path
                  description: The project id.
                  required: true
                  schema:
                    type: string
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.MoveProjectRequest'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/users:
        get:
            tags:
                - Users
            description: ListUsers lists all Users.
            operationId: Users_ListUsers
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Users to return. The service may return fewer than this value.
                     If unspecified, at most 50 Users will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListUsers` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Users to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Users. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Users will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListUsersResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Users
            description: CreateUser creates a new User.
            operationId: Users_CreateUser
            parameters:
                - name: userId
                  in: query
                  description: |-
                    The ID to use for the User. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/users/{user}:
        get:
            tags:
                - Users
            description: GetUser gets a User by name.
            operationId: Users_GetUser
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Users
            description: DeleteUser deletes a User by name.
            operationId: Users_DeleteUser
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the User to delete. If this is not the same etag as the currently stored User,
                     the request will be rejected. If not provided, the User will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the User will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: If true, the User will be deleted even if it has child resources still existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Users
            description: UpdateUser updates a User.
            operationId: Users_UpdateUser
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the User.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the User will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/users/{user}/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/users/{user}/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: user
                  in: path
                  description: The user id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors:
        get:
            tags:
                - Vendors
            description: ListVendors lists all Vendors.
            operationId: Vendors_ListVendors
            parameters:
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Vendors to return. The service may return fewer than this value.
                     If unspecified, at most 50 Vendors will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListVendors` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Vendors to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Vendors. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Vendors will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.ListVendorsResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Vendors
            description: CreateVendor creates a new Vendor.
            operationId: Vendors_CreateVendor
            parameters:
                - name: vendorId
                  in: query
                  description: |-
                    The ID to use for the Vendor. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}:
        get:
            tags:
                - Vendors
            description: GetVendor gets a Vendor by name.
            operationId: Vendors_GetVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Vendors
            description: DeleteVendor deletes a Vendor by name.
            operationId: Vendors_DeleteVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Vendor to delete. If this is not the same etag as the currently stored Vendor,
                     the request will be rejected. If not provided, the Vendor will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the Vendor will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: If true, the Vendor will be deleted even if it has child resources still existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Vendors
            description: UpdateVendor updates a Vendor.
            operationId: Vendors_UpdateVendor
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the Vendor.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Vendor. If true, the Vendor will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices:
        get:
            tags:
                - Invoices
            description: ListInvoices lists Invoices.
            operationId: Invoices_ListInvoices
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Invoices to return. The service may return fewer than this value.
                     If unspecified, at most 50 Invoices will be returned. The maximum value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListInvoices` call. Provide this to retrieve the subsequent page.
                     When paginating, all other parameters must match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Invoices to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: The order by fields for the Invoices. The default order is ascending. There is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the response will include deleted Invoices.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.ListInvoicesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Invoices
            description: CreateInvoice creates an Invoice.
            operationId: Invoices_CreateInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoiceId
                  in: query
                  description: |-
                    The ID to use for the Invoice. If not specified, an ID will be automatically generated.
                     If the ID is automatically generated, the Client is responsible for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices/{invoice}:
        get:
            tags:
                - Invoices
            description: GetInvoice gets an Invoice.
            operationId: Invoices_GetInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Invoices
            description: DeleteInvoice deletes an Invoice.
            operationId: Invoices_DeleteInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the Invoice to delete. If this is not provided, the Invoice will be deleted unconditionally.
                     If provided, the Invoice will be deleted only if the etag matches the etag of the currently stored Invoice.
                     If the etag is provided and does not match the etag of the currently stored Invoice, the request will be rejected.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, a missing Invoice will be treated as a success.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Invoices
            description: UpdateInvoice updates an Invoice.
            operationId: Invoices_UpdateInvoice
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The update mask for the Invoice.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    Allow missing Invoice. If true, the Invoice will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices/{invoice}/files:
        get:
            tags:
                - Files
            description: List files by parent.
            operationId: Files_ListFiles
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: pageSize
                  in: query
                  description: |-
                    The maximum number of Files to return. The service may return fewer than
                     this value. If unspecified, at most 50 Files will be returned. The maximum
                     value is 1000; values above 1000 will be coerced to 1000.
                  schema:
                    type: integer
                    format: int32
                - name: pageToken
                  in: query
                  description: |-
                    A page token, received from a previous `ListFiles` call. Provide this to
                     retrieve the subsequent page. When paginating, all other parameters must
                     match the call that provided the page token.
                  schema:
                    type: string
                - name: filter
                  in: query
                  description: A filter expression that filters the Files to be listed.
                  schema:
                    type: string
                - name: orderBy
                  in: query
                  description: |-
                    The order by fields for the Files. The default order is ascending. There
                     is no descending order.
                  schema:
                    type: string
                - name: showDeleted
                  in: query
                  description: If true, the deleted Files will be included in the response.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.ListFilesResponse'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        post:
            tags:
                - Files
            description: Creates a new file.
            operationId: Files_CreateFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: fileId
                  in: query
                  description: |-
                    The ID to use for the File. If not specified, an ID will be automatically
                     generated. If the ID is automatically generated, the Client is responsible
                     for reconciliation.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
    /v1alpha/vendors/{vendor}/invoices/{invoice}/files/{file}:
        get:
            tags:
                - Files
            description: Get a file by name.
            operationId: Files_GetFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        delete:
            tags:
                - Files
            description: Deletes a file.
            operationId: Files_DeleteFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: etag
                  in: query
                  description: |-
                    The etag of the File to delete. If this is not the same etag as the
                     currently stored File, the request will be rejected. If not provided, the
                     File will be deleted unconditionally.
                  schema:
                    type: string
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
                - name: allowMissing
                  in: query
                  description: If true, the File will be deleted successfully even if it does not exist.
                  schema:
                    type: boolean
                - name: force
                  in: query
                  description: |-
                    If true, the File will be deleted even if it has child resources still
                     existing.
                  schema:
                    type: boolean
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
        patch:
            tags:
                - Files
            description: Updates a file.
            operationId: Files_UpdateFile
            parameters:
                - name: vendor
                  in: path
                  description: The vendor id.
                  required: true
                  schema:
                    type: string
                - name: invoice
                  in: path
                  description: The invoice id.
                  required: true
                  schema:
                    type: string
                - name: file
                  in: path
                  description: The file id.
                  required: true
                  schema:
                    type: string
                - name: updateMask
                  in: query
                  description: The field mask to update the File.
                  schema:
                    type: string
                    format: field-mask
                - name: allowMissing
                  in: query
                  description: |-
                    If true, the File will be created if it does not exist. In this case,
                     field_mask is ignored.
                  schema:
                    type: boolean
                - name: validateOnly
                  in: query
                  description: If true, the request is validated and nothing is persisted.
                  schema:
                    type: boolean
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                required: true
            responses:
                "200":
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.longrunning.Operation'
                default:
                    description: Default error response
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/google.rpc.Status'
components:
    schemas:
        datum.os.invoicesmanager.v1alpha.Invoice:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this Invoice.
                invoiceId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Invoice within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Invoice. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Invoice that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Invoice that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Invoice that
                         may be set by external tools to enable platform features which identify
                         Invoices via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Invoice is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Invoice is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Invoice.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice_Spec'
                    description: Spec is the specification of the Invoice.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice_Status'
                    description: Status is the current status of the Invoice.
            description: "Invoice is a resource representing an Invoice from an organization to a \n customer account or from a vendor to an organization."
        datum.os.invoicesmanager.v1alpha.Invoice_Spec:
            required:
                - number
                - dueTime
                - amountDue
                - type
            type: object
            properties:
                number:
                    type: string
                    description: Invoice number.
                dueTime:
                    type: string
                    description: Due date of the invoice.
                    format: date-time
                amountDue:
                    allOf:
                        - $ref: '#/components/schemas/google.type.Money'
                    description: Amount of the invoice.
                description:
                    type: string
                    description: Description of the invoice.
                state:
                    enum:
                        - STATE_UNSPECIFIED
                        - STATE_NO_INVOICE
                        - STATE_DRAFT
                        - STATE_RECEIVED
                        - STATE_SUSPECTED_DUPLICATE
                        - STATE_APPROVED
                        - STATE_PO_MATCHING_ERROR
                        - STATE_PO_MATCHING_COMPLETE
                        - STATE_EXCEPTION
                        - STATE_EXCEPTION_DISPUTE
                        - STATE_EXCEPTIONS_REVIEWED
                        - STATE_PENDING_PAYMENT
                        - STATE_PAID
                        - STATE_CANCELED
                        - STATE_REJECTED
                    type: string
                    description: "Status of the invoice. \n Defaults to STATE_DRAFT on creation for customer invoices.\n Defaults to STATE_RECEIVED on creation for vendor invoices.\n (-- api-linter: core::0216::state-field-output-only=disabled\n     aip.dev/not-precedent: For now this must be settable by the user.\n     As we add integrations with payment processors, this will be deprecated. --)"
                    format: enum
                type:
                    enum:
                        - TYPE_UNSPECIFIED
                        - TYPE_PAYABLE
                        - TYPE_RECEIVABLE
                    type: string
                    description: Type is the type of the invoice.
                    format: enum
            description: Spec is the specification of the Invoice.
        datum.os.invoicesmanager.v1alpha.Invoice_Status:
            type: object
            properties:
                state:
                    readOnly: true
                    enum:
                        - STATE_UNSPECIFIED
                        - STATE_NO_INVOICE
                        - STATE_DRAFT
                        - STATE_RECEIVED
                        - STATE_SUSPECTED_DUPLICATE
                        - STATE_APPROVED
                        - STATE_PO_MATCHING_ERROR
                        - STATE_PO_MATCHING_COMPLETE
                        - STATE_EXCEPTION
                        - STATE_EXCEPTION_DISPUTE
                        - STATE_EXCEPTIONS_REVIEWED
                        - STATE_PENDING_PAYMENT
                        - STATE_PAID
                        - STATE_CANCELED
                        - STATE_REJECTED
                    type: string
                    description: State is the state of the invoice.
                    format: enum
            description: Status is the current status of the Invoice.
        datum.os.invoicesmanager.v1alpha.ListInvoicesResponse:
            type: object
            properties:
                invoices:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.invoicesmanager.v1alpha.Invoice'
                    description: The list of Invoices.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListInvoicesRequest.page_token field in a subsequent call to `ListInvoices` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListInvoicesResponse is the response for listing Invoices.
        datum.os.resourcemanager.v1alpha.File:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this File.
                fileId:
                    readOnly: true
                    type: string
                    description: The resource ID of this File within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the File. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this File that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a File that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a File that
                         may be set by external tools to enable platform features which identify
                         Files via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the File is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the File is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the File.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.FileSpec'
                    description: The specification of this File.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.FileStatus'
                    description: The status of this File.
            description: File is a resource that represents a file in cloud storage.
        datum.os.resourcemanager.v1alpha.FileSpec:
            required:
                - base
            type: object
            properties:
                parent:
                    readOnly: true
                    type: string
                    description: |-
                        The resource name of the parent resource. Parent resources can be and are
                         not limited to:
                         - organizations/{organization}
                         - organizations/{organization}/invoices/{invoice}
                         - organizations/{organization}/users/{user}
                         - organizations/{organization}/vendors/{vendor}
                         - users/{user}
                         - vendors/{vendor}
                         - vendors/{vendor}/invoices/{invoice}
                base:
                    type: string
                    description: |-
                        The file system base name of the file. This is typically the name of the
                         file on disk.
                extension:
                    type: string
                    description: |-
                        The extension of the file. This is typically the file extension of the file
                         on disk (e.g. "txt", "png", "pdf"). Note that the extension must not
                         include a leading dot, unless you fancy having two dots before the
                         extension.
                sizeBytes:
                    readOnly: true
                    type: string
                    description: The size of the file in bytes.
                mimeType:
                    type: string
                    description: |-
                        The MIME type of the file. This is typically the MIME type of the file on
                         disk (e.g. "text/plain", "image/png", "application/pdf"). During upload,
                         the mime type provided must match the mime type detected, otherwise the
                         upload will fail. When left blank, this will default to
                         `application/octet-stream`.
                key:
                    readOnly: true
                    type: string
                    description: |-
                        The key of the file. This is typically the key of the file on cloud storage
                         (e.g. "my-object-key").
                documentType:
                    enum:
                        - DOCUMENT_TYPE_UNSPECIFIED
                        - DOCUMENT_TYPE_INVOICE
                        - DOCUMENT_TYPE_RECEIPT
                        - DOCUMENT_TYPE_CONTRACT
                        - DOCUMENT_TYPE_TOS
                        - DOCUMENT_TYPE_PRIVACY_POLICY
                        - DOCUMENT_TYPE_NDA
                        - DOCUMENT_TYPE_MSA
                    type: string
                    description: |-
                        The conceptual document type of the file. This is meant to inform about the
                         purpose of the file. It is not meant to be a mime type nor is it
                         authoritative.
                    format: enum
            description: FileSpec is the specification of a File.
        datum.os.resourcemanager.v1alpha.FileStatus:
            type: object
            properties:
                state:
                    readOnly: true
                    type: string
                    description: The state of the file.
            description: FileStatus is the status of a File.
        datum.os.resourcemanager.v1alpha.GeneratePreSignedURLResponse:
            type: object
            properties:
                uri:
                    type: string
                    description: The pre-signed URL.
                expirationTime:
                    type: string
                    description: The expiration time of the pre-signed URL.
                    format: date-time
            description: |-
                GeneratePreSignedURLResponse is the response for generating a pre-signed URL
                 for a file.
        datum.os.resourcemanager.v1alpha.ListFilesResponse:
            type: object
            properties:
                files:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.File'
                    description: The list of Files.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListFilesRequest.page_token field in a subsequent
                         call to `ListFiles` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListFilesResponse is the response for listing files.
        datum.os.resourcemanager.v1alpha.ListOrganizationsResponse:
            type: object
            properties:
                organizations:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization'
                    description: The list of Organizations.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListOrganizationsRequest.page_token field in a subsequent call to `ListOrganizations` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListOrganizationsResponse is the response for listing Organizations.
        datum.os.resourcemanager.v1alpha.ListProjectsResponse:
            type: object
            properties:
                projects:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Project'
                    description: The list of projects.
                nextPageToken:
                    type: string
                    description: A token to retrieve the next page of results.
            description: The response message for listing projects.
        datum.os.resourcemanager.v1alpha.ListUsersResponse:
            type: object
            properties:
                users:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.User'
                    description: The list of Users.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListUsersRequest.page_token field in a subsequent call to `ListUsers` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListUsersResponse is the response for listing Users.
        datum.os.resourcemanager.v1alpha.MoveProjectRequest:
            required:
                - name
                - destinationParent
            type: object
            properties:
                name:
                    type: string
                    description: |-
                        The resource name of the project that will be moved to a new location
                         within the resource hierarchy.
                destinationParent:
                    type: string
                    description: |-
                        The location within the hierarchy to move the project to. The project
                         can be moved to another folder within the organization or the root of
                         the organization. Must be the resource name of the parent, e.g.
                         `folders/{folder}` or `organizations/{organization}`.
                etag:
                    type: string
                    description: |-
                        Optionally provide the computed checksum value of the current resource to
                         ensure a project will only be moved when the current resource was provided
                         in the request.
                validateOnly:
                    type: boolean
                    description: |-
                        When set to true, the request will only be validated and no actions will be
                         taken on the project. This is helpful for confirming the request options
                         are correct before calling the endpoint.
            description: |-
                The request message to use when moving a project to a new location within
                 the resource hierarchy.
        datum.os.resourcemanager.v1alpha.Organization:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this Organization.
                organizationId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Organization within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Organization. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Organization that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Organization
                         that may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Organization that
                         may be set by external tools to enable platform features which identify
                         Organizations via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Organization is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Organization is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: |-
                        Output only. If set, there are currently changes in flight to the
                         Organization.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization_Spec'
                    description: The specifications of the Organization.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.Organization_Status'
                    description: The status of the Organization.
            description: Organization is a resource representing an Organization.
        datum.os.resourcemanager.v1alpha.Organization_Spec:
            type: object
            properties:
                parentOrganizationId:
                    type: string
                    description: The ID of the parent organization for the organization.
                description:
                    type: string
                    description: A description of the organization.
                avatarRemoteUri:
                    type: string
                    description: The URL of the organization's avatar.
                avatarDataUri:
                    type: string
                    description: The data URI of the organization's avatar.
            description: Spec is the specification of an Organization.
        datum.os.resourcemanager.v1alpha.Organization_Status:
            type: object
            properties:
                verificationState:
                    readOnly: true
                    enum:
                        - VERIFICATION_STATE_UNSPECIFIED
                        - VERIFICATION_STATE_PENDING
                        - VERIFICATION_STATE_VERIFIED
                    type: string
                    description: The verification state of the organization.
                    format: enum
                internal:
                    readOnly: true
                    type: boolean
                    description: For internal use only.
                personal:
                    readOnly: true
                    type: boolean
                    description: For internal user only.
            description: Status is the status of an Organization.
        datum.os.resourcemanager.v1alpha.Project:
            required:
                - displayName
            type: object
            properties:
                name:
                    type: string
                    description: |-
                        The resource name of the Project.
                         Format: projects/{project}
                parent:
                    readOnly: true
                    type: string
                    description: |-
                        The resource name of the Project's parent in the resource hierarchy. This
                         value will change if the project is moved in the resource hierachy. The
                         parent will always be a folder (e.g. `folders/{folder}`) or organization
                         (e.g. `organizations/{organization}`).

                         The [MoveProject] method can be used to move the Project to a new parent.
                uid:
                    readOnly: true
                    type: string
                    description: A system-generated UUIDv4 that uniquely identifies the resource.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        A checksum calculated by the server based on the current state of the
                         project resource. This value can be sent on update and delete requests to
                         ensure the client has an up-to-date value before proceeding with the mutate
                         call.
                createTime:
                    readOnly: true
                    type: string
                    description: The time when the project was created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: The time when the project was last updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: The time when the project was deleted.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: |-
                        Inidicates whether the project is being reconciled because the current
                         state of the project does not match the desired state.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations are an unstructured key-value map stored with a project that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and will be preserved when modifying objects.

                         Annotation keys must be in a fully-qualified domain format.

                           annotations:
                             resourcemanager.datumapis.com/project-id: some-value
                             extensions.calico.com/network: some-network
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels are an unstructured key-value map that can be used to categorizing
                         the resource. Eventually the system will allow filtering on project labels.
                displayName:
                    type: string
                    description: |-
                        A user-provided name for the project. This must be unique within the parent
                         resource.
                description:
                    type: string
                    description: An optional description for the project.
            description: The Project resource message.
        datum.os.resourcemanager.v1alpha.User:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: The resource name of this User.
                userId:
                    readOnly: true
                    type: string
                    description: The resource ID of this User within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the User. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this User that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a User that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a User that
                         may be set by external tools to enable platform features which identify
                         Users via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the User is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the User is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the User.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.UserSpec'
                    description: The specification of the user.
                status:
                    readOnly: true
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.UserStatus'
                    description: The status of the user.
            description: User is a resource representing a User.
        datum.os.resourcemanager.v1alpha.UserSetting:
            type: object
            properties:
                uiTheme:
                    enum:
                        - UI_THEME_UNSPECIFIED
                        - UI_THEME_AUTO
                        - UI_THEME_LIGHT
                        - UI_THEME_DARK
                    type: string
                    description: The theme of the user interface.
                    format: enum
            description: UserSetting is the setting of a User.
        datum.os.resourcemanager.v1alpha.UserSpec:
            required:
                - email
            type: object
            properties:
                email:
                    type: string
                    description: The email of the user.
                firstname:
                    type: string
                    description: The first name of the user.
                lastname:
                    type: string
                    description: The last name of the user.
                avatarRemoteUri:
                    type: string
                    description: The avatar of the user, as a remote URI.
                avatarDataUri:
                    type: string
                    description: The avatar of the user, as a data URI.
                avatarUpdateTime:
                    type: string
                    description: The time the user's avatar was last updated.
                    format: date-time
                lastSeenTime:
                    type: string
                    description: The time the user was last seen.
                    format: date-time
                authProvider:
                    enum:
                        - AUTH_PROVIDER_UNSPECIFIED
                        - AUTH_PROVIDER_CREDENTIALS
                        - AUTH_PROVIDER_GOOGLE
                        - AUTH_PROVIDER_GITHUB
                        - AUTH_PROVIDER_WEBAUTHN
                    type: string
                    description: The auth provider used to register the account.
                    format: enum
                role:
                    enum:
                        - ROLE_UNSPECIFIED
                        - ROLE_OWNER
                        - ROLE_ADMIN
                        - ROLE_MEMBER
                        - ROLE_USER
                    type: string
                    description: The role of the user.
                    format: enum
                setting:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.resourcemanager.v1alpha.UserSetting'
                    description: The setting of the user.
            description: UserSpec is the specification of a User.
        datum.os.resourcemanager.v1alpha.UserStatus:
            type: object
            properties:
                verificationState:
                    readOnly: true
                    enum:
                        - VERIFICATION_STATE_UNSPECIFIED
                        - VERIFICATION_STATE_PENDING
                        - VERIFICATION_STATE_VERIFIED
                    type: string
                    description: The verification state of the user.
                    format: enum
                status:
                    readOnly: true
                    enum:
                        - USER_STATE_UNSPECIFIED
                        - USER_STATE_ACTIVE
                        - USER_STATE_INACTIVE
                        - USER_STATE_DEACTIVATED
                        - USER_STATE_SUSPENDED
                        - USER_STATE_ONBOARDING
                    type: string
                    description: The state of the user account.
                    format: enum
                locked:
                    readOnly: true
                    type: boolean
                    description: Indicates if the user account is locked.
                internal:
                    readOnly: true
                    type: boolean
                    description: For internal use only.
            description: UserStatus is the status of a User.
        datum.os.vendormanager.v1alpha.ListVendorsResponse:
            type: object
            properties:
                vendors:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor'
                    description: The list of Vendors.
                nextPageToken:
                    type: string
                    description: |-
                        A token to retrieve the next page of results.
                         Pass this value in the ListVendorsRequest.page_token field in a subsequent call to `ListVendors` to retrieve the next page of results.
                         If the page token is not set, there are no more results.
            description: ListVendorsResponse is the response for listing Vendors.
        datum.os.vendormanager.v1alpha.Vendor:
            required:
                - spec
            type: object
            properties:
                name:
                    readOnly: true
                    type: string
                    description: |-
                        The resource name of this Vendor.
                         Format: vendors/{vendor}
                         Format: organizations/{organization}/vendors/{vendor}
                vendorId:
                    readOnly: true
                    type: string
                    description: The resource ID of this Vendor within its parent resource.
                uid:
                    readOnly: true
                    type: string
                    description: |-
                        Server assigned unique identifier for the Vendor. The value
                         is a UUID4 string and guaranteed to remain unchanged until the resource is
                         deleted.
                displayName:
                    type: string
                    description: |-
                        Human-readable display name of this Vendor that you can modify.
                         The maximum length is 63 characters.
                annotations:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Annotations is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to store and retrieve arbitrary metadata.
                         They are not queryable and should be preserved when modifying objects.
                labels:
                    type: object
                    additionalProperties:
                        type: string
                    description: |-
                        Labels is an unstructured key-value map stored with a Vendor that
                         may be set by external tools to enable platform features which identify
                         Vendors via label selections.
                createTime:
                    readOnly: true
                    type: string
                    description: Output only. The time when the Vendor is created.
                    format: date-time
                updateTime:
                    readOnly: true
                    type: string
                    description: Output only. The last time that the Vendor is updated.
                    format: date-time
                deleteTime:
                    readOnly: true
                    type: string
                    description: |-
                        Output only. For a deleted resource, the deletion time. It is only
                         populated as a response to a Delete request.
                    format: date-time
                reconciling:
                    readOnly: true
                    type: boolean
                    description: Output only. If set, there are currently changes in flight to the Vendor.
                etag:
                    readOnly: true
                    type: string
                    description: |-
                        This checksum is computed by the server based on the value of
                         other fields, and might be sent on update requests to ensure the client has
                         an up-to-date value before proceeding.
                spec:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_Spec'
                    description: The specification of the Vendor.
            description: Vendor is a resource representing a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_PaymentPreference:
            required:
                - preferred
                - method
            type: object
            properties:
                preferred:
                    type: boolean
                    description: Is this the preferred payment method?
                method:
                    enum:
                        - PAYMENT_METHOD_UNSPECIFIED
                        - PAYMENT_METHOD_DOMESTIC_WIRE_TRANSFER
                        - PAYMENT_METHOD_INTERNATIONAL_WIRE_TRANSFER
                        - PAYMENT_METHOD_ACH
                        - PAYMENT_METHOD_CREDIT_CARD
                    type: string
                    description: The payment method of the Vendor.
                    format: enum
            description: PaymentPreference is the payment preference of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_Profile:
            type: object
            properties:
                person:
                    type: string
                    description: The name of the person.
                corporation:
                    type: string
                    description: The name of the corporation.
                corporationType:
                    type: string
                    description: The type of corporation (e.g. LLC, S-Corp, C-Corp, Other).
                corporationDba:
                    type: string
                    description: The DBA (Doing Business As) name of the corporation.
                description:
                    type: string
                    description: |-
                        The description of the corporation or contractor and the services it
                         provides.
                websiteUri:
                    type: string
                    description: The URL of the website of the corporation or contractor.
                addresses:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.type.PostalAddress'
                    description: The physical address of the person or corporation.
                phoneNumbers:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.type.PhoneNumber'
                    description: The phone number of the person or corporation.
                paymentPreference:
                    type: array
                    items:
                        $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_PaymentPreference'
                    description: The payment preference of the Vendor.
                taxInfo:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_TaxInfo'
                    description: The tax information of the person or corporation.
            description: Profile is the profile of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_Spec:
            required:
                - type
                - profile
            type: object
            properties:
                type:
                    enum:
                        - VENDOR_TYPE_UNSPECIFIED
                        - VENDOR_TYPE_PERSON
                        - VENDOR_TYPE_CORPORATION
                    type: string
                    description: The type of Vendor as defined by the VendorType enum.
                    format: enum
                profile:
                    allOf:
                        - $ref: '#/components/schemas/datum.os.vendormanager.v1alpha.Vendor_Profile'
                    description: The profile of the Vendor.
                state:
                    enum:
                        - ONBOARDING_STATE_UNSPECIFIED
                        - ONBOARDING_STATE_PENDING
                        - ONBOARDING_STATE_ACTIVE
                        - ONBOARDING_STATE_INACTIVE
                    type: string
                    description: |-
                        The onboarding state of the Vendor. Defaults to ONBOARDING_STATE_PENDING
                         on creation.
                         (-- api-linter: core::0216::state-field-output-only=disabled
                             aip.dev/not-precedent: We are modeling our Vendor APIs from Square's
                             Vendor APIs. The 'state' of a Vendor is not output only. It is
                             settable by the user. --)
                    format: enum
            description: Spec is the specification of a Vendor.
        datum.os.vendormanager.v1alpha.Vendor_TaxInfo:
            required:
                - taxId
                - taxIdType
            type: object
            properties:
                taxId:
                    type: string
                    description: The tax id of the person or corporation.
                taxIdType:
                    enum:
                        - TAX_ID_TYPE_UNSPECIFIED
                        - TAX_ID_TYPE_SSN
                        - TAX_ID_TYPE_EIN
                        - TAX_ID_TYPE_ATIN
                        - TAX_ID_TYPE_ITIN
                    type: string
                    description: The tax id type of the person or corporation.
                    format: enum
            description: TaxInfo is the tax information of a Vendor.
        google.longrunning.Operation:
            type: object
            properties:
                name:
                    type: string
                    description: |-
                        The server-assigned name, which is only unique within the same service that
                         originally returns it. If you use the default HTTP mapping, the
                         `name` should be a resource name ending with `operations/{unique_id}`.
                metadata:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.Any'
                    description: |-
                        Service-specific metadata associated with the operation.  It typically
                         contains progress information and common metadata such as create time.
                         Some services might not provide such metadata.  Any method that returns a
                         long-running operation should document the metadata type, if any.
                done:
                    type: boolean
                    description: |-
                        If the value is `false`, it means the operation is still in progress.
                         If `true`, the operation is completed, and either `error` or `response` is
                         available.
                error:
                    allOf:
                        - $ref: '#/components/schemas/google.rpc.Status'
                    description: The error result of the operation in case of failure or cancellation.
                response:
                    allOf:
                        - $ref: '#/components/schemas/google.protobuf.Any'
                    description: |-
                        The normal response of the operation in case of success.  If the original
                         method returns no data on success, such as `Delete`, the response is
                         `google.protobuf.Empty`.  If the original method is standard
                         `Get`/`Create`/`Update`, the response should be the resource.  For other
                         methods, the response should have the type `XxxResponse`, where `Xxx`
                         is the original method name.  For example, if the original method name
                         is `TakeSnapshot()`, the inferred response type is
                         `TakeSnapshotResponse`.
            description: |-
                This resource represents a long-running operation that is the result of a
                 network API call.
        google.protobuf.Any:
            type: object
            properties:
                '@type':
                    type: string
                    description: The type of the serialized message.
            additionalProperties: true
            description: Contains an arbitrary serialized message along with a @type that describes the type of the serialized message.
        google.rpc.Status:
            type: object
            properties:
                code:
                    type: integer
                    description: The status code, which should be an enum value of [google.rpc.Code][google.rpc.Code].
                    format: int32
                message:
                    type: string
                    description: A developer-facing error message, which should be in English. Any user-facing error message should be localized and sent in the [google.rpc.Status.details][google.rpc.Status.details] field, or localized by the client.
                details:
                    type: array
                    items:
                        $ref: '#/components/schemas/google.protobuf.Any'
                    description: A list of messages that carry the error details.  There is a common set of message types for APIs to use.
            description: 'The `Status` type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. It is used by [gRPC](https://github.com/grpc). Each `Status` message contains three pieces of data: error code, error message, and error details. You can find out more about this error model and how to work with it in the [API Design Guide](https://cloud.google.com/apis/design/errors).'
        google.type.Money:
            type: object
            properties:
                currencyCode:
                    type: string
                    description: The three-letter currency code defined in ISO 4217.
                units:
                    type: string
                    description: |-
                        The whole units of the amount.
                         For example if `currencyCode` is `"USD"`, then 1 unit is one US dollar.
                nanos:
                    type: integer
                    description: |-
                        Number of nano (10^-9) units of the amount.
                         The value must be between -999,999,999 and +999,999,999 inclusive.
                         If `units` is positive, `nanos` must be positive or zero.
                         If `units` is zero, `nanos` can be positive, zero, or negative.
                         If `units` is negative, `nanos` must be negative or zero.
                         For example $-1.75 is represented as `units`=-1 and `nanos`=-750,000,000.
                    format: int32
            description: Represents an amount of money with its currency type.
        google.type.PhoneNumber:
            type: object
            properties:
                e164Number:
                    type: string
                    description: |-
                        The phone number, represented as a leading plus sign ('+'), followed by a
                         phone number that uses a relaxed ITU E.164 format consisting of the
                         country calling code (1 to 3 digits) and the subscriber number, with no
                         additional spaces or formatting, e.g.:
                          - correct: "+15552220123"
                          - incorrect: "+1 (555) 222-01234 x123".

                         The ITU E.164 format limits the latter to 12 digits, but in practice not
                         all countries respect that, so we relax that restriction here.
                         National-only numbers are not allowed.

                         References:
                          - https://www.itu.int/rec/T-REC-E.164-201011-I
                          - https://en.wikipedia.org/wiki/E.164.
                          - https://en.wikipedia.org/wiki/List_of_country_calling_codes
                shortCode:
                    allOf:
                        - $ref: '#/components/schemas/google.type.PhoneNumber_ShortCode'
                    description: |-
                        A short code.

                         Reference(s):
                          - https://en.wikipedia.org/wiki/Short_code
                extension:
                    type: string
                    description: |-
                        The phone number's extension. The extension is not standardized in ITU
                         recommendations, except for being defined as a series of numbers with a
                         maximum length of 40 digits. Other than digits, some other dialing
                         characters such as ',' (indicating a wait) or '#' may be stored here.

                         Note that no regions currently use extensions with short codes, so this
                         field is normally only set in conjunction with an E.164 number. It is held
                         separately from the E.164 number to allow for short code extensions in the
                         future.
            description: |-
                An object representing a phone number, suitable as an API wire format.

                 This representation:

                  - should not be used for locale-specific formatting of a phone number, such
                    as "+1 (650) 253-0000 ext. 123"

                  - is not designed for efficient storage
                  - may not be suitable for dialing - specialized libraries (see references)
                    should be used to parse the number for that purpose

                 To do something meaningful with this number, such as format it for various
                 use-cases, convert it to an `i18n.phonenumbers.PhoneNumber` object first.

                 For instance, in Java this would be:

                    com.google.type.PhoneNumber wireProto =
                        com.google.type.PhoneNumber.newBuilder().build();
                    com.google.i18n.phonenumbers.Phonenumber.PhoneNumber phoneNumber =
                        PhoneNumberUtil.getInstance().parse(wireProto.getE164Number(), "ZZ");
                    if (!wireProto.getExtension().isEmpty()) {
                      phoneNumber.setExtension(wireProto.getExtension());
                    }

                  Reference(s):
                   - https://github.com/google/libphonenumber
        google.type.PhoneNumber_ShortCode:
            type: object
            properties:
                regionCode:
                    type: string
                    description: |-
                        Required. The BCP-47 region code of the location where calls to this
                         short code can be made, such as "US" and "BB".

                         Reference(s):
                          - http://www.unicode.org/reports/tr35/#unicode_region_subtag
                number:
                    type: string
                    description: |-
                        Required. The short code digits, without a leading plus ('+') or country
                         calling code, e.g. "611".
            description: |-
                An object representing a short code, which is a phone number that is
                 typically much shorter than regular phone numbers and can be used to
                 address messages in MMS and SMS systems, as well as for abbreviated dialing
                 (e.g. "Text 611 to see how many minutes you have remaining on your plan.").

                 Short codes are restricted to a region and are not internationally
                 dialable, which means the same short code can exist in different regions,
                 with different usage and pricing, even if those regions share the same
                 country calling code (e.g. US and CA).
        google.type.PostalAddress:
            type: object
            properties:
                revision:
                    type: integer
                    description: |-
                        The schema revision of the `PostalAddress`. This must be set to 0, which is
                         the latest revision.

                         All new revisions **must** be backward compatible with old revisions.
                    format: int32
                regionCode:
                    type: string
                    description: |-
                        Required. CLDR region code of the country/region of the address. This
                         is never inferred and it is up to the user to ensure the value is
                         correct. See http://cldr.unicode.org/ and
                         http://www.unicode.org/cldr/charts/30/supplemental/territory_information.html
                         for details. Example: "CH" for Switzerland.
                languageCode:
                    type: string
                    description: |-
                        Optional. BCP-47 language code of the contents of this address (if
                         known). This is often the UI language of the input form or is expected
                         to match one of the languages used in the address' country/region, or their
                         transliterated equivalents.
                         This can affect formatting in certain countries, but is not critical
                         to the correctness of the data and will never affect any validation or
                         other non-formatting related operations.

                         If this value is not known, it should be omitted (rather than specifying a
                         possibly incorrect default).

                         Examples: "zh-Hant", "ja", "ja-Latn", "en".
                postalCode:
                    type: string
                    description: |-
                        Optional. Postal code of the address. Not all countries use or require
                         postal codes to be present, but where they are used, they may trigger
                         additional validation with other parts of the address (e.g. state/zip
                         validation in the U.S.A.).
                sortingCode:
                    type: string
                    description: |-
                        Optional. Additional, country-specific, sorting code. This is not used
                         in most regions. Where it is used, the value is either a string like
                         "CEDEX", optionally followed by a number (e.g. "CEDEX 7"), or just a number
                         alone, representing the "sector code" (Jamaica), "delivery area indicator"
                         (Malawi) or "post office indicator" (e.g. Côte d'Ivoire).
                administrativeArea:
                    type: string
                    description: |-
                        Optional. Highest administrative subdivision which is used for postal
                         addresses of a country or region.
                         For example, this can be a state, a province, an oblast, or a prefecture.
                         Specifically, for Spain this is the province and not the autonomous
                         community (e.g. "Barcelona" and not "Catalonia").
                         Many countries don't use an administrative area in postal addresses. E.g.
                         in Switzerland this should be left unpopulated.
                locality:
                    type: string
                    description: |-
                        Optional. Generally refers to the city/town portion of the address.
                         Examples: US city, IT comune, UK post town.
                         In regions of the world where localities are not well defined or do not fit
                         into this structure well, leave locality empty and use address_lines.
                sublocality:
                    type: string
                    description: |-
                        Optional. Sublocality of the address.
                         For example, this can be neighborhoods, boroughs, districts.
                addressLines:
                    type: array
                    items:
                        type: string
                    description: |-
                        Unstructured address lines describing the lower levels of an address.

                         Because values in address_lines do not have type information and may
                         sometimes contain multiple values in a single field (e.g.
                         "Austin, TX"), it is important that the line order is clear. The order of
                         address lines should be "envelope order" for the country/region of the
                         address. In places where this can vary (e.g. Japan), address_language is
                         used to make it explicit (e.g. "ja" for large-to-small ordering and
                         "ja-Latn" or "en" for small-to-large). This way, the most specific line of
                         an address can be selected based on the language.

                         The minimum permitted structural representation of an address consists
                         of a region_code with all remaining information placed in the
                         address_lines. It would be possible to format such an address very
                         approximately without geocoding, but no semantic reasoning could be
                         made about any of the address components until it was at least
                         partially resolved.

                         Creating an address only containing a region_code and address_lines, and
                         then geocoding is the recommended way to handle completely unstructured
                         addresses (as opposed to guessing which parts of the address should be
                         localities or administrative areas).
                recipients:
                    type: array
                    items:
                        type: string
                    description: |-
                        Optional. The recipient at the address.
                         This field may, under certain circumstances, contain multiline information.
                         For example, it might contain "care of" information.
                organization:
                    type: string
                    description: Optional. The name of the organization at the address.
            description: |-
                Represents a postal address, e.g. for postal delivery or payments addresses.
                 Given a postal address, a postal service can deliver items to a premise, P.O.
                 Box or similar.
                 It is not intended to model geographical locations (roads, towns,
                 mountains).

                 In typical usage an address would be created via user input or from importing
                 existing data, depending on the type of process.

                 Advice on address input / editing:
                  - Use an i18n-ready address widget such as
                    https://github.com/google/libaddressinput)
                 - Users should not be presented with UI elements for input or editing of
                   fields outside countries where that field is used.

                 For more guidance on how to use this schema, please see:
                 https://support.google.com/business/answer/6397478
tags:
    - name: Files
      description: Files is the service for managing files.
    - name: Invoices
      description: Invoices is the service for managing Invoices.
    - name: Organizations
      description: |-
        Organizations is the service for managing Organizations.
         TODO: Add support for parent/child relationships for Organizations.
    - name: Projects
      description: |-
        Manages projects within the Datum OS platform.

         Projects are used by customers to organize the resources they consume from
         services on the platform. A project can be stored within an Organization or
         within a nested hierarchy by utilizing Folders. Users can move projects to
         different locations within the resource hierarchy based on the needs of their
         organization.

         IAM endpoints are provided to support testing a user's permission to a
         project. IAM permissions are inherited from policies created on parent
         resources in the resource hierarchy.
    - name: Users
      description: Users is the service for managing Users.
    - name: Vendors
      description: Vendors is the service for managing Vendors.
